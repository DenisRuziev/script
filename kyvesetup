#!/bin/bash

while true
do
echo "============================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "============================================================"
PS3='Select an action: '
options=(
"Install Docker"
"Update ATP"
"Run Avalanche Node"
"Run MoonRiver Node"
"Run Cosmos Node"
"Run Celo Node"
"Run Solana Node"
"Run Evmos EVM Node"
"Run Evmos Tendermint Node"
"Run Near Node"
"Run Aurora Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in
"Install Docker")
echo "============================================================"
echo "Docker installation started"
echo "============================================================"
sudo apt-get install curl gnupg apt-transport-https ca-certificates \
lsb-release -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
| sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
echo "deb [arch=$(dpkg --print-architecture) \
signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
| sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
sudo apt-get update && \
sudo apt-get install docker-ce docker-ce-cli containerd.io -y
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
sudo chmod +x /usr/local/bin/docker-compose && docker-compose --version
echo "============================================================"
echo "Docker installed"
echo "============================================================"
break
;;
"Update ATP")
echo "============================================================"
echo "ATP update started"
echo "============================================================"
sudo apt update && sudo apt upgrade -y
echo "============================================================"
echo "ATP updated"
echo "============================================================"
break
;;
"Run Avalanche Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
echo "Enter your private key: "
echo "============================================================"
read private_key
echo "============================================================"
echo "Enter stake amount: "
echo "============================================================"
read avalanche_stake
docker pull kyve/evm:latest && \
docker stop kyve-avalanche-node 2>/dev/null; \
docker container rm kyve-avalanche-node 2>/dev/null; \
docker run -d -it --restart=always \
--name kyve-avalanche-node kyve/evm:latest \
--pool 0x464200b29738367366FDb4c45f3b8fb582AE0Bf8 \
--private-key $private_key \
--stake $avalanche_stake
echo "============================================================"
echo "Checking the logs"
echo "============================================================"
docker logs kyve-avalanche-node --follow --tail=100
echo "============================================================"
echo "If there are no errors in the logs, congratulations, the node is
installed. If you have any doubts - send screenshots to our support chat"
echo "============================================================"
;;
"Run MoonRiver Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Cosmos Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Celo Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Solana Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Evmos EVM Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Evmos Tendermint Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Near Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Run Aurora Node")
echo "============================================================"
echo "Node installation started"
echo "============================================================"
;;
"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done

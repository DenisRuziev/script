#!/bin/bash

while true
do

# Logo

echo "============================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "============================================================"

# Menu

PS3='Select an action: '
options=(
"Install Docker"
"Update ATP"
"Setup your Private Key for next install"
"Run Avalanche Node"
"Run MoonBeam Node"
"Run MoonRiver Node"
"Run Aurora Node"
"Exit")
select opt in "${options[@]}"
do
case $opt in

# Docker

"Install Docker")
echo "============================================================"
echo "Docker installation started"
echo "============================================================"
sudo apt-get install curl gnupg apt-transport-https ca-certificates \
lsb-release -y && curl -fsSL https://download.docker.com/linux/ubuntu/gpg \
| sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
echo "deb [arch=$(dpkg --print-architecture) \
signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \
https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
| sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
sudo apt-get update && \
sudo apt-get install docker-ce docker-ce-cli containerd.io -y
echo "============================================================"
echo "Docker installed"
echo "============================================================"
break
;;

# ATP

"Update ATP")
echo "============================================================"
echo "ATP update started"
echo "============================================================"
sudo apt update && sudo apt upgrade -y
echo "============================================================"
echo "ATP updated"
echo "============================================================"
break
;;

# Setup private key

"Setup your Private Key for next install")
echo "============================================================"
echo "Enter your private key: "
echo "============================================================"
read private_key
echo 'export private_key='${private_key} >> $HOME/.bash_profile
source ~/.bash_profile
echo "============================================================"
echo "Private key installed $private_key"
echo "============================================================"
break
;;

# Avalance

"Run Avalanche Node")
echo "============================================================"
echo "Enter your Nodename: "
echo "============================================================"
read AVALANCHE_NODENAME
echo 'export AVALANCHE_NODENAME='${AVALANCHE_NODENAME} >> $HOME/.bash_profile
source ~/.bash_profile
echo "============================================================"
echo "NodeName installed $AVALANCHE_NODENAME"
echo "============================================================"
echo "Node installation started"
echo "============================================================"
echo "Enter stake amount: "
echo "============================================================"
read avalanche_stake
echo 'export avalanche_stake='${avalanche_stake} >> $HOME/.bash_profile
source ~/.bash_profile

docker run -d -it --restart=always \
--name $AVALANCHE_NODENAME kyve/evm:latest \
--pool 0x90a70AAE360e5E69C3cB466880f025985810f2c8 \
--private-key $private_key \
--stake $avalanche_stake \
--commission 10

echo "============================================================"
echo "Checking the logs"
echo "============================================================"
docker logs $AVALANCHE_NODENAME --follow --tail=100
echo "============================================================"
echo "If there are no errors in the logs, congratulations, the node is
installed. If you have any doubts - send screenshots to our support chat"
echo "============================================================"
break
;;

# MoonRiver

"Run MoonRiver Node")
echo "============================================================"
echo "Enter your Nodename: "
echo "============================================================"
read MOONRIVER_NODENAME
echo 'export MOONRIVER_NODENAME='${MOONRIVER_NODENAME} >> $HOME/.bash_profile
source ~/.bash_profile
echo "============================================================"
echo "NodeName installed $MOONRIVER_NODENAME"
echo "============================================================"
echo "Node installation started"
echo "============================================================"
echo "Enter stake amount: "
echo "============================================================"
read moonriver_stake
echo 'export moonriver_stake='${moonriver_stake} >> $HOME/.bash_profile
source ~/.bash_profile

docker run -d -it --restart=always \
--name $MOONRIVER_NODENAME kyve/evm:latest \
--pool 0x7d5b80078480804C126363Cf1061C2DC6b9c1b22 \
--private-key $private_key \
--stake $moonriver_stake \
--commission 10

echo "============================================================"
echo "Checking the logs"
echo "============================================================"
docker logs $MOONRIVER_NODENAME --follow --tail=100
echo "============================================================"
echo "If there are no errors in the logs, congratulations, the node is
installed. If you have any doubts - send screenshots to our support chat"
echo "============================================================"
break
;;

#Aurora

"Run Aurora Node")
echo "============================================================"
echo "Enter your Nodename: "
echo "============================================================"
read AURORA_NODENAME
echo 'export AURORA_NODENAME='${AURORA_NODENAME} >> $HOME/.bash_profile
source ~/.bash_profile
echo "============================================================"
echo "NodeName installed $AURORA_NODENAME"
echo "============================================================"
echo "Node installation started"
echo "============================================================"
echo "Enter stake amount: "
echo "============================================================"
read aurora_stake
echo 'export aurora_stake='${aurora_stake} >> $HOME/.bash_profile
source ~/.bash_profile

docker run -d -it --restart=always \
--name $AURORA_NODENAME kyve/evm:latest \
--pool 0x7E6eb8D60409DC211218d6978E6FE69BB1DC1e24 \
--private-key $private_key \
--stake $aurora_stake \
--commission 10

echo "============================================================"
echo "Checking the logs"
echo "============================================================"
docker logs $AURORA_NODENAME --follow --tail=100
echo "============================================================"
echo "If there are no errors in the logs, congratulations, the node is
installed. If you have any doubts - send screenshots to our support chat"
echo "============================================================"
break
;;

"Run MoonBeam Node")
echo "============================================================"
echo "Enter your Nodename: "
echo "============================================================"
read MOONBEAM_NODENAME
echo 'export MOONBEAM_NODENAME='${MOONBEAM_NODENAME} >> $HOME/.bash_profile
source ~/.bash_profile
echo "============================================================"
echo "NodeName installed $MOONBEAM_NODENAME"
echo "============================================================"
echo "Node installation started"
echo "============================================================"
echo "Enter stake amount: "
echo "============================================================"
read moonbeam_stake
echo 'export moonbeam_stake='${moonbeam_stake} >> $HOME/.bash_profile
source ~/.bash_profile

docker run -d -it --restart=always \
--name $MOONBEAM_NODENAME kyve/evm:latest \
--pool 0xFAA8A4d6AC08e8e470d5F4ED771D645d5CaF5957 \
--private-key $private_key \
--stake $moonbeam_stake \
--commission 10

echo "============================================================"
echo "Checking the logs"
echo "============================================================"
docker logs $MOONBEAM_NODENAME --follow --tail=100
echo "============================================================"
echo "If there are no errors in the logs, congratulations, the node is
installed. If you have any doubts - send screenshots to our support chat"
echo "============================================================"
break
;;

#Exit

"Exit")
exit
;;
*) echo "invalid option $REPLY";;
esac
done
done

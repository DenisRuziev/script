#!/bin/bash

while true
do

# Logo

echo "============================================================"
curl -s https://raw.githubusercontent.com/AlekseyMoskalev1/script/main/Noders.sh | bash
echo "============================================================"


PS3='Select an action: '
options=("Prepare the server for installation" "Install node" "Check node status" "Request for tokens and balance in Discord" "Create wallet" "Create validator" "Parametrs"  "Exit")
select opt in "${options[@]}"
               do
                   case $opt in
                   
"Prepare the server for installation")
               echo "============================================================"
               echo "Preparation has begun"
               echo "============================================================"

# Update apt curl make essenrial

sudo apt update && sudo apt upgrade -y
sudo apt install curl tar wget clang pkg-config libssl-dev jq build-essential git make ncdu -y
sudo apt install make clang pkg-config libssl-dev build-essential git jq ncdu bsdmainutils -y

# instal lattes Go

curl -LO https://get.golang.org/$(uname)/go_installer && chmod +x go_installer && ./go_installer && rm go_installer
source $HOME/.bash_profile

               echo "============================================================"
               echo "The server is ready!"
               echo "============================================================"
break
;;
            
"Install node")

NODERS_NODE="[NODERS]"
CHAIN_ID=tgrade-testnet-3

                echo "============================================================"
                echo "Set parameters"
                echo "============================================================"
                echo "Enter NodName:"
                echo "============================================================"
                
read TGRADE_NODENAME
TGRADE_NODENAME=$TGRADE_NODENAME$NODERS_NODE

#CloneTGRADE

git clone https://github.com/confio/tgrade
cd tgrade 
git checkout v0.5.1
make build
mv ~/tgrade/build/tgrade /usr/local/bin
tgrade version
tgrade init $TGRADE_NODENAME --chain-id $CHAIN_ID
wget https://raw.githubusercontent.com/confio/public-testnets/main/testnet-3/config/genesis.json -O ~/.tgrade/config/genesis.json
sha256sum $HOME/.tgrade/config/genesis.json
sed -i.bak -e "s/^minimum-gas-prices = \"\"/minimum-gas-prices = \"0.05utgd\"/" $HOME/.tgrade/config/app.toml
external_address=`curl ifconfig.me`
peers="95e7eba78b895763ba53198f0019820a77aec28f@178.128.169.146:26656,0936197ae12be2a23114dbd32296c790c0bea405@206.189.85.24:26656,fe0682fbe72af8193676cb0cb41adfe94a551e72@5.161.64.239:26656,b00f8de43d515d9b966f0758ebfa22fb1d98a977@137.184.105.178:26656"
sed -i.bak -e "s/^external_address = \"\"/external_address = \"$external_address:26656\"/; s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" $HOME/.tgrade/config/config.toml
sleep 3

#Service

echo "[Unit]
Description=Tgrade Node
After=network.target

[Service]
User=$USER
Type=simple
ExecStart=$(which tgrade) start
Restart=on-failure
LimitNOFILE=65535

[Install]
WantedBy=multi-user.target" > $HOME/tgrade.service
sudo mv $HOME/tgrade.service /etc/systemd/system
sudo tee <<EOF >/dev/null /etc/systemd/journald.conf
Storage=persistent
EOF
systemctl restart tgrade
source $HOME/.bash_profile

               echo "============================================================"
               echo "Installation complete!"
               echo "============================================================"
break
;;

"Check node status")

               echo "============================================================"
               echo "Synchronization status must be false!"
               echo "============================================================"
               
curl -s localhost:26657/status | jq .result.sync_info.catching_up
break
;;

"Create wallet")
               echo "============================================================"
               echo "Enter your wallet name:"
               echo "============================================================"

#Create wallet

read TGRADE_WALLET
tgrade keys add $TGRADE_WALLET

break
;;

"Create validator")

               echo "============================================================"
               echo "Enter your validator name:"
               echo "============================================================"
          
tgrade tx poe create-validator \
  --amount 5000000utgd \
  --from $TGRADE_WALLET \
  --pubkey $(tgrade tendermint show-validator)  \
  --chain-id $CHAIN_ID \
  --moniker "$TGRADE_NODENAME" \
  --fees 15000utgd \
  --node https://rpc.testnet-3.tgrade.io:443
  
break
;;

"Parametrs")

               echo "============================================================"
               echo "Your parameters"
               echo "============================================================"
               
echo $TGRADE_NODENAME $TGRADE_WALLET
break
;;

"Request for tokens and balance in Discord")

               echo "============================================================"
               echo "To request tokens, you need to go to the Discord server in the
fauccet channel and request tokens.
Server in Discord - https://discord.gg/9mxWTGZB"
               echo "============================================================"
               echo "Format request tokens you will see in the channel"
               echo "Format request balanceyou will see in the channel"
               echo "============================================================"

break
;;

"Exit")
exit
;;

*) echo "invalid option $REPLY";;
esac
done
done
